<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Assessment and planning on Dynatrace Modernization Workshop</title>
    <link>/30_assessment.html</link>
    <description>Recent content in Assessment and planning on Dynatrace Modernization Workshop</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    
	<atom:link href="/30_assessment/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Dynatrace OneAgent</title>
      <link>/30_assessment/10_dynatrace_oneagent.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/30_assessment/10_dynatrace_oneagent.html</guid>
      <description>Dynatraces OneAgent provides the industry’s largest technology coverage, spanning cloud native to legacy environments in an all-in-one solution. OneAgent provides:
 A set of specialized processes that run on each monitored host. OneAgent collects metrics from the operating system it runs on and compares the metrics to performance metrics. The metrics are then reported to Dynatrace. Monitors technologies like Java, Node.js, .NET and more in greater detail by injecting itself into processes and monitors performance with code level insights.</description>
    </item>
    
    <item>
      <title>Review easyTravel</title>
      <link>/30_assessment/20_review_eztravel.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/30_assessment/20_review_eztravel.html</guid>
      <description>1 . Open the AWS portal (http://portal.AWS.com) and open the Virtual Machine (VM) page. One way to do this is search for virtual machines
2 . Open the VM called workshop-ez-1. On the VM overview page, you can see that this is a Linux (ubuntu 18.04) host.
Dynatrace OneAgent In addition to installing easyTravel on this host, the AWS CLI was used to install the Dynatrace OneAgent AWS VM extension.</description>
    </item>
    
    <item>
      <title>Host and Smartscape</title>
      <link>/30_assessment/30_review_eztravel-host.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/30_assessment/30_review_eztravel-host.html</guid>
      <description>Now lets review what the OneAgent automatically discovered using these various Dynatrace views:
 Host Smartscape Services and Service Flow Transactions and services Databases Technologies Host view  You should be on the host page, but if not, from the right hand menu in Dynatrace choose hosts then click on the host with the prefix of workshop-ez-1.
On host page, you will see basic infrastructure information for the host.</description>
    </item>
    
    <item>
      <title>Processes and Services</title>
      <link>/30_assessment/40_review_eztravel-process.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/30_assessment/40_review_eztravel-process.html</guid>
      <description>In the Smartscape view, we saw the visualizations of the relationships in vertical stack and as well as the relationships spatially. Now lets view the process and service tiers to see the relationships from a single entity.
Lets return back to the host page where we will explore each of the tiers for the VM. To get back there, from the right hand menu in Dynatrace choose hosts then click on the host with the prefix of workshop-ez-1.</description>
    </item>
    
    <item>
      <title>Service Flow</title>
      <link>/30_assessment/50_review_eztravel_service_flow.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/30_assessment/50_review_eztravel_service_flow.html</guid>
      <description>As just mentioned, Dynatrace understands your applications’ transactions from end to end. This transactional insight is visualized through Service flow, which illustrates the sequence of service calls that are triggered by each service request in your environment.
With Service flow, you see the flow of service calls from the perspective of a single service, request, or their filtered subset. Along with the specific services that are triggered, you can also see how each component of a request contributes to the overall response time.</description>
    </item>
    
    <item>
      <title>Transactions and Services</title>
      <link>/30_assessment/60_review_eztravel-transactions_services.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/30_assessment/60_review_eztravel-transactions_services.html</guid>
      <description>Within Dynatrace, services can take the form of web services, web containers, database requests, custom services, and more. Services may in turn call other services such as web services, remote services, and databases services.
Web applications consist of web pages that are served by web servers and web containers, for example Tomcat. Web and mobile applications are built upon services that process requests like web requests, web service calls, and messaging.</description>
    </item>
    
    <item>
      <title>Databases</title>
      <link>/30_assessment/70_review_eztravel-databases.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/30_assessment/70_review_eztravel-databases.html</guid>
      <description>Click on the Databases link in the Dynatraces left side menu to view the databases that OneAgent was able to automatically discover and instrument.
As mentioned early, easyTravel uses an Apache Derby embedded relational database, but we also setup a easyTravel VM that is running MongoDB in a docker container. So you should see both listed in the database view.
Review MongoDB Click on the Mongo database to open the database page.</description>
    </item>
    
    <item>
      <title>Technology View</title>
      <link>/30_assessment/90_review_eztravel-technologies.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/30_assessment/90_review_eztravel-technologies.html</guid>
      <description>Click on the Technologies link on the left side menu within Dynatrace to view the technologies that OneAgent was able to automatically discover and instrument.
The workshop is somewhat limited, so here is an example from another environment.
How this helps This is another out the box feature that helps you understand what technologies are in your environment and with a heatmap presentation to what degree they exists.</description>
    </item>
    
    <item>
      <title>AWS Monitor</title>
      <link>/30_assessment/100_azure_monitor.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/30_assessment/100_azure_monitor.html</guid>
      <description> In addition to monitoring your AWS workloads using OneAgent, Dynatrace provides integration with AWS Monitor which adds Infrastructure monitoring to gain insight even into serverless application scenarios.
How this helps </description>
    </item>
    
    <item>
      <title>Summary</title>
      <link>/30_assessment/110_summary.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/30_assessment/110_summary.html</guid>
      <description>By just installing the OneAgent, we have now gained a detailed topological view of easyTravel from the both the infrastructure and application tiers and we are now ready to tackle our adoption to the cloud armed with the answers we need.
 Right Priority - We now understand the complexity and interdependency of services and components to the rest of the environment architecture Right-Sizing the environment - We now understanding which resources are required to move along with their required resource consumption patterns Best Migration Strategy - We now understand the the current end-to-end transactions through architecture and can choose the best migration strategy (rehost, refactor, rearchitect, rebuild)  Checklist In this section, you should have completed the following:</description>
    </item>
    
    <item>
      <title>Enable a Problem</title>
      <link>/30_assessment/120_enable_problem.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/30_assessment/120_enable_problem.html</guid>
      <description>The easyTravel applicaiton has a feature to enable &amp;amp; disable problem patterns built into its codebase so that we can simulate problems.
To enable a problem that Davis will pickup on workshop-ez-1, just run these scripts in the AWS cloud shell that will find the IP address for your workshop-ez-1 instance and make the required HTTP REST call for the feature flag.
Best to run each problem pattern seperately so that it is easier to analyze.</description>
    </item>
    
  </channel>
</rss>